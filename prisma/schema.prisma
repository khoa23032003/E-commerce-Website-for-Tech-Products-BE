generator client {
  provider = "prisma-client-js" // Khai báo client Prisma
}

datasource db {
  provider = "mongodb" // Sử dụng MongoDB làm nguồn dữ liệu
  url      = env("DATABASE_URL") // URL của cơ sở dữ liệu sẽ được lưu trong biến môi trường
}

// Bảng người dùng (User)
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // ID tự động, kiểu ObjectId của MongoDB
  email     String   @unique // Email phải là duy nhất
  password  String // Mật khẩu của người dùng
  name      String // Tên của người dùng
  roles            Role[]       @relation(fields: [roleIds], references: [id])
  roleIds          String[]     @db.ObjectId
  refresh_token String?
  createdAt DateTime @default(now()) // Ngày tạo, tự động lấy thời gian hiện tại
  updatedAt DateTime @updatedAt // Ngày cập nhật, tự động cập nhật khi thay đổi

  orders       Order[] // Danh sách đơn hàng của người dùng
  reviews      Review[] // Danh sách đánh giá của người dùng
  cart         Cart? // Giỏ hàng của người dùng
  wishlist     Wishlist? // Danh sách yêu thích của người dùng
  addresses    Address[] // Địa chỉ của người dùng
  Notification Notification[]
}

model Role {
    id            String       @id @default(auto()) @map("_id") @db.ObjectId
    name          String       @unique
    description   String?
    permissions   Permission[] @relation(fields: [permissionIds], references: [id])
    permissionIds String[]     @db.ObjectId
    users         User[]       @relation(fields: [userIds], references: [id])
    userIds       String[]     @db.ObjectId
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @updatedAt
}

model Permission {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    name        String   @unique
    description String?
    roles       Role[]   @relation(fields: [roleIds], references: [id])
    roleIds     String[] @db.ObjectId
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}


// Bảng danh mục sản phẩm (Category)
model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId // ID tự động, kiểu ObjectId của MongoDB
  name     String    @unique // Tên danh mục phải là duy nhất
  products Product[] // Danh sách sản phẩm thuộc danh mục

  createdAt DateTime @default(now()) // Ngày tạo
  updatedAt DateTime @updatedAt // Ngày cập nhật
}

// Bảng sản phẩm (Product)

// Bảng sản phẩm (Product)
model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId // ID tự động, kiểu ObjectId của MongoDB
  name        String // Tên sản phẩm
  description String // Mô tả sản phẩm
  price       Float // Giá sản phẩm
  imageUrl    String // URL hình ảnh của sản phẩm
  stock       Int      @default(0) // Số lượng sản phẩm trong kho, mặc định là 0
  categoryId  String   @db.ObjectId // ID danh mục sản phẩm
  category    Category @relation(fields: [categoryId], references: [id]) // Liên kết đến danh mục

  reviews       Review[] // Danh sách đánh giá
  orderItems    OrderItem[] // Danh sách các mục đơn hàng
  cartItems     CartItem[] // Danh sách các mục trong giỏ hàng
  wishlistItems Wishlist? // Liên kết đến danh sách yêu thích

  createdAt           DateTime           @default(now()) // Ngày tạo
  updatedAt           DateTime           @updatedAt // Ngày cập nhật
  Brand               Brand?             @relation(fields: [brandId], references: [id])
  brandId             String?            @db.ObjectId
  Supplier            Supplier?          @relation(fields: [supplierId], references: [id])
  supplierId          String?            @db.ObjectId
  ProductCollection   ProductCollection? @relation(fields: [productCollectionId], references: [id])
  productCollectionId String?            @db.ObjectId
}

// Bảng đơn hàng (Order)
model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // ID tự động, kiểu ObjectId của MongoDB
  userId    String   @db.ObjectId // ID người dùng
  user      User     @relation(fields: [userId], references: [id]) // Liên kết đến người dùng
  status    String   @default("PENDING") // Trạng thái đơn hàng, mặc định là "PENDING"
  total     Float // Tổng tiền đơn hàng
  payment   Payment? // Phương thức thanh toán
  createdAt DateTime @default(now()) // Ngày tạo
  updatedAt DateTime @updatedAt // Ngày cập nhật

  orderItems         OrderItem[] // Danh sách các mục trong đơn hàng
  OrderStatusHistory OrderStatusHistory[]
  Shipping           Shipping[]
}

// Bảng chi tiết đơn hàng (OrderItem)
model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId // ID tự động, kiểu ObjectId của MongoDB
  orderId   String  @db.ObjectId // ID đơn hàng
  order     Order   @relation(fields: [orderId], references: [id]) // Liên kết đến đơn hàng
  productId String  @db.ObjectId // ID sản phẩm
  product   Product @relation(fields: [productId], references: [id]) // Liên kết đến sản phẩm
  quantity  Int // Số lượng sản phẩm trong đơn hàng
  price     Float // Giá của sản phẩm tại thời điểm đặt hàng
  createdAt DateTime @default(now()) // Ngày tạo
  updatedAt DateTime @updatedAt // Ngày cập nhật
}

// Bảng giỏ hàng (Cart)
model Cart {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId // ID tự động
  userId     String      @unique @db.ObjectId // ID người dùng
  user       User        @relation(fields: [userId], references: [id]) // Liên kết đến người dùng
  items      CartItem[]  // Danh sách các mục trong giỏ hàng
  createdAt  DateTime    @default(now()) // Ngày tạo
  updatedAt  DateTime    @updatedAt // Ngày cập nhật
}


// Bảng mục trong giỏ hàng (CartItem)
model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId // ID tự động, kiểu ObjectId của MongoDB
  cartId    String  @db.ObjectId // ID giỏ hàng
  cart      Cart    @relation(fields: [cartId], references: [id]) // Liên kết đến giỏ hàng
  productId String  @db.ObjectId // ID sản phẩm
  product   Product @relation(fields: [productId], references: [id]) // Liên kết đến sản phẩm
  quantity  Int // Số lượng sản phẩm trong giỏ hàng
  createdAt DateTime @default(now()) // Ngày tạo
  updatedAt DateTime @updatedAt // Ngày cập nhật
}

// Bảng thanh toán (Payment)
model Payment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // ID tự động, kiểu ObjectId của MongoDB
  orderId   String   @unique @db.ObjectId // ID đơn hàng, phải là duy nhất
  order     Order    @relation(fields: [orderId], references: [id]) // Liên kết đến đơn hàng
  method    String // Phương thức thanh toán
  status    String   @default("PENDING") // Trạng thái thanh toán, mặc định là "PENDING"
  amount    Float // Số tiền thanh toán
  createdAt DateTime @default(now()) // Ngày tạo
}

// Bảng địa chỉ (Address)
model Address {
  id         String @id @default(auto()) @map("_id") @db.ObjectId // ID tự động, kiểu ObjectId của MongoDB
  userId     String @db.ObjectId // ID người dùng
  user       User   @relation(fields: [userId], references: [id]) // Liên kết đến người dùng
  street     String // Đường
  city       String // Thành phố
  state      String // Bang hoặc tỉnh
  postalCode String // Mã bưu điện
  country    String // Quốc gia
}

// Bảng danh sách yêu thích (Wishlist)
model Wishlist {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId // ID tự động, kiểu ObjectId của MongoDB
  userId    String  @unique @db.ObjectId // ID người dùng, phải là duy nhất
  user      User    @relation(fields: [userId], references: [id]) // Liên kết đến người dùng
  productId String  @unique @db.ObjectId // ID sản phẩm, phải là duy nhất
  product   Product @relation(fields: [productId], references: [id]) // Liên kết đến sản phẩm
}

// Bảng đánh giá (Review)
model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // ID tự động, kiểu ObjectId của MongoDB
  userId    String   @db.ObjectId // ID người dùng
  user      User     @relation(fields: [userId], references: [id]) // Liên kết đến người dùng
  productId String   @db.ObjectId // ID sản phẩm
  product   Product  @relation(fields: [productId], references: [id]) // Liên kết đến sản phẩm
  rating    Int // Đánh giá bằng số điểm
  comment   String // Bình luận của người dùng
  createdAt DateTime @default(now()) // Ngày tạo
}

//Bảng Navbar
model Navbar {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  link String 

}

// Bảng thương hiệu (Brand)
model Brand {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Bảng phụ kiện (Accessory)
model Accessory {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  imageUrl    String
  stock       Int    @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Bảng chính sách (Policy)
model Policy {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  content String

  createdAt DateTime @default(now())
}

// Bảng tin tức công nghệ (TechnologyNews)
model TechnologyNews {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  content     String
  imageUrl    String?

  createdAt DateTime @default(now())
}

// Bảng banner (Banner)
model Banner {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  imageUrl String
  link     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Bảng xuất xứ (Origin)
model Origin {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  country String

  createdAt DateTime @default(now())
}

// Bảng khuyến mãi (Promotion)
model Promotion {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  discount    Float

  createdAt DateTime @default(now())
}

// Bảng lịch sử trạng thái đơn hàng (OrderStatusHistory)
model OrderStatusHistory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String   @db.ObjectId
  order     Order    @relation(fields: [orderId], references: [id])
  status    String
  timestamp DateTime @default(now())
}

// Bảng nhà cung cấp (Supplier)
model Supplier {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  contact  String
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Bảng vận chuyển (Shipping)
model Shipping {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId    String  @db.ObjectId
  order      Order   @relation(fields: [orderId], references: [id])
  method     String
  status     String  @default("PENDING")
  trackingId String?

  createdAt DateTime @default(now())
}

// Bảng thông báo (Notification)
model Notification {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  userId  String  @db.ObjectId
  user    User    @relation(fields: [userId], references: [id])
  content String
  read    Boolean @default(false)

  createdAt DateTime @default(now())
}

// Bảng bộ sưu tập sản phẩm (ProductCollection)
model ProductCollection {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
